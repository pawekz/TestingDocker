name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry (ACR)
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Deploy backend to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          acrName: testingdockercr
          acrUsername: ${{ secrets.REGISTRY_USERNAME }}
          acrPassword: ${{ secrets.REGISTRY_PASSWORD }}
          containerAppName: tooltrack-backend-app
          resourceGroup: testingdocker
          containerAppEnvironment: tooltrack-env-sea
          location: southeastasia
          appSourcePath: ./backend
          imageToBuild: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/backend-tooltrack:${{ github.sha }}
          imageToDeploy: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/backend-tooltrack:${{ github.sha }}
          environmentVariables: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
          yamlConfigPath: ./backend/containerapp.yaml
        env:
          SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Update Backend Database Connection
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp update --name tooltrack-backend-app --resource-group testingdocker \
              --set-env-vars "SPRING_DATASOURCE_URL=jdbc:sqlserver://testingdockerserver.database.windows.net:1433;databaseName=testingdockerdb;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;" \
              "SPRING_DATASOURCE_USERNAME=${{ secrets.SQL_USERNAME }}" \
              "SPRING_DATASOURCE_PASSWORD=${{ secrets.SQL_PASSWORD }}" \
              "SPRING_JPA_HIBERNATE_DDL_AUTO=update" \
              "SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.SQLServerDialect" \
              "SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.microsoft.sqlserver.jdbc.SQLServerDriver"

      - name: Deploy frontend to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          acrName: testingdockercr
          acrUsername: ${{ secrets.REGISTRY_USERNAME }}
          acrPassword: ${{ secrets.REGISTRY_PASSWORD }}
          containerAppName: tooltrack-frontend-app
          resourceGroup: testingdocker
          containerAppEnvironment: tooltrack-env-sea
          location: southeastasia
          appSourcePath: ./frontend2
          imageToBuild: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend-tooltrack:${{ github.sha }}
          imageToDeploy: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend-tooltrack:${{ github.sha }}
          yamlConfigPath: ./frontend2/containerapp.yaml
        env:
          SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Update Frontend Configuration
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Get backend URL dynamically
            BACKEND_URL=$(az containerapp show --name tooltrack-backend-app --resource-group testingdocker --query "properties.configuration.ingress.fqdn" -o tsv)

            # Update frontend environment variables
            az containerapp update --name tooltrack-frontend-app --resource-group testingdocker \
              --set-env-vars "VITE_API_URL=https://$BACKEND_URL"

            # Update frontend ingress port separately using the correct command
            az containerapp ingress show --name tooltrack-frontend-app --resource-group testingdocker
            az containerapp ingress update --name tooltrack-frontend-app --resource-group testingdocker --target-port 3000


          
