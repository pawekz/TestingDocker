name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Upgrade Azure CLI
        run: |
          az upgrade --yes
          az extension add --name containerapp

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry (ACR)
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Prepare Config Files
        run: |
          sed -i "s|#{SUBSCRIPTION_ID}#|${{ secrets.AZURE_SUBSCRIPTION_ID }}|g" ./frontend2/containerapp.yaml
          sed -i "s|#{SUBSCRIPTION_ID}#|${{ secrets.AZURE_SUBSCRIPTION_ID }}|g" ./backend/containerapp.yaml
          sed -i "s|#{CONTAINER_IMAGE}#|${{ secrets.AZURE_CONTAINER_REGISTRY }}/backend-tooltrack:${{ github.sha }}|g" ./backend/containerapp.yaml
          sed -i "s|#{CONTAINER_IMAGE}#|${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend-tooltrack:${{ github.sha }}|g" ./frontend2/containerapp.yaml
          sed -i "s|#{REGISTRY_SERVER}#|${{ secrets.AZURE_CONTAINER_REGISTRY }}|g" ./backend/containerapp.yaml
          sed -i "s|#{REGISTRY_SERVER}#|${{ secrets.AZURE_CONTAINER_REGISTRY }}|g" ./frontend2/containerapp.yaml
          sed -i "s|#{REGISTRY_USERNAME}#|${{ secrets.REGISTRY_USERNAME }}|g" ./backend/containerapp.yaml
          sed -i "s|#{REGISTRY_USERNAME}#|${{ secrets.REGISTRY_USERNAME }}|g" ./frontend2/containerapp.yaml
          sed -i "s|#{REGISTRY_PASSWORD}#|${{ secrets.REGISTRY_PASSWORD }}|g" ./backend/containerapp.yaml
          sed -i "s|#{REGISTRY_PASSWORD}#|${{ secrets.REGISTRY_PASSWORD }}|g" ./frontend2/containerapp.yaml
          sed -i "s|#{DATABASE_URL}#|jdbc:sqlserver://testingdockerserver.database.windows.net:1433;database=testingdockerdb;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30|g" ./backend/containerapp.yaml
          sed -i "s|#{SQL_USERNAME}#|${{ secrets.SQL_USERNAME }}|g" ./backend/containerapp.yaml
          sed -i "s|#{SQL_PASSWORD}#|${{ secrets.SQL_PASSWORD }}|g" ./backend/containerapp.yaml

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/backend-tooltrack:${{ github.sha }}

      - name: Deploy backend to Azure Container Apps
        uses: azure/CLI@v2
        with:
          inlineScript: |
            # Check if the app exists
            RESOURCE_EXISTS=$(az containerapp show --name tooltrack-backend-app --resource-group testingdocker --query "name" -o tsv 2>/dev/null || echo "notfound")
            
            if [[ "$RESOURCE_EXISTS" == "notfound" || -z "$RESOURCE_EXISTS" ]]; then
              echo "Creating new backend container app using YAML..."
              # Create the container app using the YAML file
              az containerapp create \
                --resource-group testingdocker \
                --yaml ./backend/containerapp.yaml
            else
              echo "Updating existing backend container app..."
              # Update the container app
              az containerapp update \
                --name tooltrack-backend-app \
                --resource-group testingdocker \
                --image ${{ secrets.AZURE_CONTAINER_REGISTRY }}/backend-tooltrack:${{ github.sha }} \
                --set-env-vars SPRING_DATASOURCE_URL='jdbc:sqlserver://testingdockerserver.database.windows.net:1433;database=testingdockerdb;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30' \
                         SPRING_DATASOURCE_USERNAME='${{ secrets.SQL_USERNAME }}' \
                         SPRING_DATASOURCE_PASSWORD='${{ secrets.SQL_PASSWORD }}'
            fi

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend2
          push: true
          tags: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend-tooltrack:${{ github.sha }}

      - name: Deploy frontend to Azure Container Apps
        uses: azure/CLI@v2
        with:
          inlineScript: |
            # Get the backend URL
            BACKEND_URL=$(az containerapp show --name tooltrack-backend-app --resource-group testingdocker --query "properties.configuration.ingress.fqdn" -o tsv)
            if [[ -z "$BACKEND_URL" ]]; then
              echo "Error: Failed to retrieve backend URL."
              exit 1
            fi
            
            # Check if the frontend app exists
            RESOURCE_EXISTS=$(az containerapp show --name tooltrack-frontend-app --resource-group testingdocker --query "name" -o tsv 2>/dev/null || echo "notfound")
            
            if [[ "$RESOURCE_EXISTS" == "notfound" || -z "$RESOURCE_EXISTS" ]]; then
              echo "Creating new frontend container app..."
              # Create the container app
              az containerapp create \
                --name tooltrack-frontend-app \
                --resource-group testingdocker \
                --environment tooltrack-env-sea \
                --image ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend-tooltrack:${{ github.sha }} \
                --registry-server ${{ secrets.AZURE_CONTAINER_REGISTRY }} \
                --registry-username ${{ secrets.REGISTRY_USERNAME }} \
                --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
                --target-port 3000 \
                --ingress external \
                --env-vars VITE_API_URL=https://$BACKEND_URL \
                         REACT_APP_API_URL=https://$BACKEND_URL
            else
              echo "Updating existing frontend container app..."
              # Update the container app
              az containerapp update \
                --name tooltrack-frontend-app \
                --resource-group testingdocker \
                --image ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend-tooltrack:${{ github.sha }} \
                --set-env-vars VITE_API_URL=https://$BACKEND_URL \
                         REACT_APP_API_URL=https://$BACKEND_URL
            fi